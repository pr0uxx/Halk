@model HakunaMatataWeb.Models.ViewModels.ESOGuides.ESOGuideViewModel

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>Edit</title>
	<style>
		input, select, textarea {
			max-width: 100%;
		}
	</style>
</head>
<body>
	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">
			<h4>ESOGuide</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.Id)

			<div class="form-group">
				@Html.LabelFor(model => model.GuideType, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EnumDropDownListFor(model => model.GuideType, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.GuideType, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.SubTitle, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.SubTitle, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.SubTitle, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.TextAreaFor(model => model.Content, new { @class = "form-control", rows = "2", cols = "20", wrap = "hard" })
					@Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.LastUpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.LastUpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.LastUpdatedDate, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="well" id="preview-pane">

			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Save" class="btn btn-default" />
				</div>
			</div>
		</div>
	}

	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>

	@section scripts
{
		<script type="text/javascript" src="~/Scripts/MarkdownConverter.js"></script>
	}

</body>
</html>
