@*@model HakunaMatataWeb.Models.ViewModels.ESOGuides.ESOGuideViewModel*@
@model HakunaMatataWeb.Models.ESOGuides.ESOGuideViewModel

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>Create</title>
</head>
<body>
	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()

		<div class="col-12 pt-4">
			<h4>Create new ESOGuide</h4>
			<hr />
			<div class="form-inline form-wide w-100">
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				<div class="form-group w-25">

					@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-6 float-left p-0 m-0 d-inline-block" })
					<div class="col-md-12">
						@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

					</div>
				</div>


				<div class="form-group w-25">

					@Html.LabelFor(model => model.SubTitle, htmlAttributes: new { @class = "control-label col-6 float-left p-0 m-0 d-inline-block" })
					<div class="col-md-12">
						@Html.EditorFor(model => model.SubTitle, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.SubTitle, "", new { @class = "text-danger" })

					</div>
				</div>

				<div class="form-group w-25">
					@Html.LabelFor(model => model.GuideType, htmlAttributes: new { @class = "control-label col-6 float-left p-0 m-0 d-inline-block" })
					<div class="col-md-12">
						@Html.EnumDropDownListFor(model => model.GuideType, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.GuideType, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>
		</div>
		<div class="w-100 pt-4">
			<div class="form-group">
				@Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "col-2" })
				<div class="col-md-12">
					@Html.TextAreaFor(model => model.Content, new { @class = "form-control", rows = "10", cols = "20", wrap = "hard" })
					@Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
		<div class="well col-12" id="preview-pane">
		</div>
		<div class="col-12">
			<div class="form-group">

				<input type="submit" value="Create" class="btn btn-default" />

			</div>
		</div>
	}

	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>

	@section scripts
{
		<script type="text/javascript" src="~/Scripts/MarkdownConverter.js"></script>
	}
</body>
</html>